{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lex\\\\Downloads\\\\freelance-portfolio-react (1)\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport Project from '../components/project/Project';\nimport { projects } from \"./../helpers/projectsList\";\nimport { Pagination } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const itemsPerPage = 6;\n  const [currentPage, setCurrentPage] = useState(1);\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentProjects = projects.slice(startIndex, endIndex);\n  const totalPages = Math.ceil(projects.length / itemsPerPage);\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title-1\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"projects\",\n        children: currentProjects.map((project, index) => {\n          return /*#__PURE__*/_jsxDEV(Project, {\n            title: project.title,\n            img: project.img,\n            index: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n            onClick: () => handlePageChange(currentPage - 1),\n            disabled: currentPage === 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), Array.from({\n            length: totalPages\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: index + 1 === currentPage,\n            onClick: () => handlePageChange(index + 1),\n            children: index + 1\n          }, index + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n            onClick: () => handlePageChange(currentPage + 1),\n            disabled: currentPage === totalPages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n_s(Projects, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["Project","projects","Pagination","useState","Projects","itemsPerPage","currentPage","setCurrentPage","startIndex","endIndex","currentProjects","slice","totalPages","Math","ceil","length","handlePageChange","newPage","map","project","index","title","img","Array","from","_"],"sources":["C:/Users/Lex/Downloads/freelance-portfolio-react (1)/src/pages/Projects.js"],"sourcesContent":["import Project from '../components/project/Project';\nimport {projects} from \"./../helpers/projectsList\";\nimport {Pagination} from \"react-bootstrap\"\nimport {useState} from \"react\";\n\n\nconst Projects = () => {\n\n    const itemsPerPage = 6\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const startIndex = (currentPage - 1) * itemsPerPage\n    const endIndex = startIndex + itemsPerPage\n    const currentProjects = projects.slice(startIndex, endIndex)\n    const totalPages = Math.ceil(projects.length / itemsPerPage)\n\n    const handlePageChange = (newPage) => {\n        setCurrentPage(newPage)\n    }\n\n    return (<main className=\"section\">\n        <div className=\"container\">\n            <h2 className=\"title-1\">Projects</h2>\n            <ul className=\"projects\">\n                {currentProjects.map((project, index) => {\n                    return (<Project\n                        key={index}\n                        title={project.title}\n                        img={project.img}\n                        index={index}\n                    />);\n                })}\n            </ul>\n            <div className='text-center'>\n                <Pagination>\n                    <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)}\n                                     disabled={currentPage === 1}></Pagination.Prev>\n                    {Array.from({length: totalPages}).map((_, index) => (\n                        <Pagination.Item\n                            key={index + 1}\n                            active={index + 1 === currentPage}\n                            onClick={() => handlePageChange(index + 1)}\n                        >\n                            {index + 1}\n                        </Pagination.Item>\n                    ))}\n                    <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages} />\n                </Pagination>\n            </div>\n        </div>\n    </main>);\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,+BAA+B;AACnD,SAAQC,QAAQ,QAAO,2BAA2B;AAClD,SAAQC,UAAU,QAAO,iBAAiB;AAC1C,SAAQC,QAAQ,QAAO,OAAO;AAAC;AAG/B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEnB,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMK,UAAU,GAAG,CAACF,WAAW,GAAG,CAAC,IAAID,YAAY;EACnD,MAAMI,QAAQ,GAAGD,UAAU,GAAGH,YAAY;EAC1C,MAAMK,eAAe,GAAGT,QAAQ,CAACU,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;EAC5D,MAAMG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACb,QAAQ,CAACc,MAAM,GAAGV,YAAY,CAAC;EAE5D,MAAMW,gBAAgB,GAAIC,OAAO,IAAK;IAClCV,cAAc,CAACU,OAAO,CAAC;EAC3B,CAAC;EAED,oBAAQ;IAAM,SAAS,EAAC,SAAS;IAAA,uBAC7B;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACrC;QAAI,SAAS,EAAC,UAAU;QAAA,UACnBP,eAAe,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;UACrC,oBAAQ,QAAC,OAAO;YAEZ,KAAK,EAAED,OAAO,CAACE,KAAM;YACrB,GAAG,EAAEF,OAAO,CAACG,GAAI;YACjB,KAAK,EAAEF;UAAM,GAHRA,KAAK;YAAA;YAAA;YAAA;UAAA,QAIZ;QACN,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACD,eACL;QAAK,SAAS,EAAC,aAAa;QAAA,uBACxB,QAAC,UAAU;UAAA,wBACP,QAAC,UAAU,CAAC,IAAI;YAAC,OAAO,EAAE,MAAMJ,gBAAgB,CAACV,WAAW,GAAG,CAAC,CAAE;YACjD,QAAQ,EAAEA,WAAW,KAAK;UAAE;YAAA;YAAA;YAAA;UAAA,QAAmB,EAC/DiB,KAAK,CAACC,IAAI,CAAC;YAACT,MAAM,EAAEH;UAAU,CAAC,CAAC,CAACM,GAAG,CAAC,CAACO,CAAC,EAAEL,KAAK,kBAC3C,QAAC,UAAU,CAAC,IAAI;YAEZ,MAAM,EAAEA,KAAK,GAAG,CAAC,KAAKd,WAAY;YAClC,OAAO,EAAE,MAAMU,gBAAgB,CAACI,KAAK,GAAG,CAAC,CAAE;YAAA,UAE1CA,KAAK,GAAG;UAAC,GAJLA,KAAK,GAAG,CAAC;YAAA;YAAA;YAAA;UAAA,QAMrB,CAAC,eACF,QAAC,UAAU,CAAC,IAAI;YAAC,OAAO,EAAE,MAAMJ,gBAAgB,CAACV,WAAW,GAAG,CAAC,CAAE;YAAC,QAAQ,EAAEA,WAAW,KAAKM;UAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAClG;QAAA;QAAA;QAAA;MAAA,QACX;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AACX,CAAC;AAAC,GA7CIR,QAAQ;AAAA,KAARA,QAAQ;AA+Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
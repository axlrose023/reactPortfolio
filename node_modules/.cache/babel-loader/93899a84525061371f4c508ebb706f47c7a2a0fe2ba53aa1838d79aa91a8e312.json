{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lex\\\\Downloads\\\\freelance-portfolio-react (1)\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Project from '../components/project/Project';\nimport { projects } from './../helpers/projectsList';\nimport Pagination from 'react-bootstrap/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const projectsPerPage = 5; // Number of projects to display per page\n  const [activePage, setActivePage] = useState(1);\n  const indexOfLastProject = activePage * projectsPerPage;\n  const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n  const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n  const totalPages = Math.ceil(projects.length / projectsPerPage);\n  const handlePageChange = pageNumber => {\n    setActivePage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title-1\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects\",\n          children: currentProjects.map((project, index) => /*#__PURE__*/_jsxDEV(Project, {\n            title: project.title,\n            img: project.img,\n            index: index + indexOfFirstProject\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          size: \"sm\",\n          children: items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"1V5FWp8UouhHPM1hVYVqcnKvGgM=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Project","projects","Pagination","Projects","projectsPerPage","activePage","setActivePage","indexOfLastProject","indexOfFirstProject","currentProjects","slice","totalPages","Math","ceil","length","handlePageChange","pageNumber","map","project","index","title","img","items"],"sources":["C:/Users/Lex/Downloads/freelance-portfolio-react (1)/src/pages/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Project from '../components/project/Project';\nimport { projects } from './../helpers/projectsList';\nimport Pagination from 'react-bootstrap/Pagination';\n\nconst Projects = () => {\n    const projectsPerPage = 5; // Number of projects to display per page\n    const [activePage, setActivePage] = useState(1);\n\n    const indexOfLastProject = activePage * projectsPerPage;\n    const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n    const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n    const totalPages = Math.ceil(projects.length / projectsPerPage);\n\n    const handlePageChange = (pageNumber) => {\n        setActivePage(pageNumber);\n    };\n\n    return (\n        <main className=\"section\">\n            <div className=\"container\">\n                <h2 className=\"title-1\">Projects</h2>\n\n                {projects.length === 0 ? (\n                    <p>No projects available.</p>\n                ) : (\n                    <div>\n                        <ul className=\"projects\">\n                            {currentProjects.map((project, index) => (\n                                <Project key={index} title={project.title} img={project.img} index={index + indexOfFirstProject} />\n                            ))}\n                        </ul>\n\n                        <Pagination size=\"sm\">{items}</Pagination>\n                    </div>\n                )}\n            </div>\n        </main>\n    );\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,UAAU,MAAM,4BAA4B;AAAC;AAEpD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,eAAe,GAAG,CAAC,CAAC,CAAC;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMQ,kBAAkB,GAAGF,UAAU,GAAGD,eAAe;EACvD,MAAMI,mBAAmB,GAAGD,kBAAkB,GAAGH,eAAe;EAChE,MAAMK,eAAe,GAAGR,QAAQ,CAACS,KAAK,CAACF,mBAAmB,EAAED,kBAAkB,CAAC;EAE/E,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACZ,QAAQ,CAACa,MAAM,GAAGV,eAAe,CAAC;EAE/D,MAAMW,gBAAgB,GAAIC,UAAU,IAAK;IACrCV,aAAa,CAACU,UAAU,CAAC;EAC7B,CAAC;EAED,oBACI;IAAM,SAAS,EAAC,SAAS;IAAA,uBACrB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,EAEpCf,QAAQ,CAACa,MAAM,KAAK,CAAC,gBAClB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,gBAE7B;QAAA,wBACI;UAAI,SAAS,EAAC,UAAU;UAAA,UACnBL,eAAe,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAChC,QAAC,OAAO;YAAa,KAAK,EAAED,OAAO,CAACE,KAAM;YAAC,GAAG,EAAEF,OAAO,CAACG,GAAI;YAAC,KAAK,EAAEF,KAAK,GAAGX;UAAoB,GAAlFW,KAAK;YAAA;YAAA;YAAA;UAAA,QACtB;QAAC;UAAA;UAAA;UAAA;QAAA,QACD,eAEL,QAAC,UAAU;UAAC,IAAI,EAAC,IAAI;UAAA,UAAEG;QAAK;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QAEjD;IAAA;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAC,GAnCInB,QAAQ;AAAA,KAARA,QAAQ;AAqCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lex\\\\Downloads\\\\freelance-portfolio-react (1)\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Project from '../components/project/Project';\nimport { projects } from './../helpers/projectsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const projectsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n  const indexOfLastProject = currentPage * projectsPerPage;\n  const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n  const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n  const totalPages = Math.ceil(projects.length / projectsPerPage);\n  const handlePageClick = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title-1\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"projects\",\n          children: currentProjects.map((project, index) => /*#__PURE__*/_jsxDEV(Project, {\n            title: project.title,\n            img: project.img,\n            index: index + indexOfFirstProject\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: Array.from({\n              length: totalPages\n            }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentPage === index + 1 ? 'active' : '',\n              onClick: () => handlePageClick(index + 1),\n              children: index + 1\n            }, index + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","Project","projects","Projects","projectsPerPage","currentPage","setCurrentPage","indexOfLastProject","indexOfFirstProject","currentProjects","slice","totalPages","Math","ceil","length","handlePageClick","pageNumber","map","project","index","title","img","Array","from","_"],"sources":["C:/Users/Lex/Downloads/freelance-portfolio-react (1)/src/pages/Projects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Project from '../components/project/Project';\nimport { projects } from './../helpers/projectsList';\n\nconst Projects = () => {\n    const projectsPerPage = 5;\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const indexOfLastProject = currentPage * projectsPerPage;\n    const indexOfFirstProject = indexOfLastProject - projectsPerPage;\n    const currentProjects = projects.slice(indexOfFirstProject, indexOfLastProject);\n\n    const totalPages = Math.ceil(projects.length / projectsPerPage);\n\n    const handlePageClick = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    return (\n        <main className=\"section\">\n            <div className=\"container\">\n                <h2 className=\"title-1\">Projects</h2>\n\n                {projects.length === 0 ? (\n                    <p>No projects available.</p>\n                ) : (\n                    <div>\n                        <ul className=\"projects\">\n                            {currentProjects.map((project, index) => (\n                                <Project key={index} title={project.title} img={project.img} index={index + indexOfFirstProject} />\n                            ))}\n                        </ul>\n\n                        <div className=\"pagination-container\">\n                            <div className=\"pagination\">\n                                {Array.from({ length: totalPages }).map((_, index) => (\n                                    <button\n                                        key={index + 1}\n                                        className={currentPage === index + 1 ? 'active' : ''}\n                                        onClick={() => handlePageClick(index + 1)}\n                                    >\n                                        {index + 1}\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </main>\n    );\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAASC,QAAQ,QAAQ,2BAA2B;AAAC;AAErD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,eAAe,GAAG,CAAC;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMO,kBAAkB,GAAGF,WAAW,GAAGD,eAAe;EACxD,MAAMI,mBAAmB,GAAGD,kBAAkB,GAAGH,eAAe;EAChE,MAAMK,eAAe,GAAGP,QAAQ,CAACQ,KAAK,CAACF,mBAAmB,EAAED,kBAAkB,CAAC;EAE/E,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACX,QAAQ,CAACY,MAAM,GAAGV,eAAe,CAAC;EAE/D,MAAMW,eAAe,GAAIC,UAAU,IAAK;IACpCV,cAAc,CAACU,UAAU,CAAC;EAC9B,CAAC;EAED,oBACI;IAAM,SAAS,EAAC,SAAS;IAAA,uBACrB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAI,SAAS,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,EAEpCd,QAAQ,CAACY,MAAM,KAAK,CAAC,gBAClB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,gBAE7B;QAAA,wBACI;UAAI,SAAS,EAAC,UAAU;UAAA,UACnBL,eAAe,CAACQ,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAChC,QAAC,OAAO;YAAa,KAAK,EAAED,OAAO,CAACE,KAAM;YAAC,GAAG,EAAEF,OAAO,CAACG,GAAI;YAAC,KAAK,EAAEF,KAAK,GAAGX;UAAoB,GAAlFW,KAAK;YAAA;YAAA;YAAA;UAAA,QACtB;QAAC;UAAA;UAAA;UAAA;QAAA,QACD,eAEL;UAAK,SAAS,EAAC,sBAAsB;UAAA,uBACjC;YAAK,SAAS,EAAC,YAAY;YAAA,UACtBG,KAAK,CAACC,IAAI,CAAC;cAAET,MAAM,EAAEH;YAAW,CAAC,CAAC,CAACM,GAAG,CAAC,CAACO,CAAC,EAAEL,KAAK,kBAC7C;cAEI,SAAS,EAAEd,WAAW,KAAKc,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAG;cACrD,OAAO,EAAE,MAAMJ,eAAe,CAACI,KAAK,GAAG,CAAC,CAAE;cAAA,UAEzCA,KAAK,GAAG;YAAC,GAJLA,KAAK,GAAG,CAAC;cAAA;cAAA;cAAA;YAAA,QAMrB;UAAC;YAAA;YAAA;YAAA;UAAA;QACA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAEb;IAAA;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACH;AAEf,CAAC;AAAC,GA/CIhB,QAAQ;AAAA,KAARA,QAAQ;AAiDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}